{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/bibliography/","result":{"data":{"mdx":{"id":"2a93aa62-5c47-5569-affe-1b4c0fac59e7","excerpt":" This page is a work in progress  This is both research I've looked at, and a handful of my notes - it's not really a formal bibliography, but I'm trying toâ€¦","fields":{"slug":"/bibliography/"},"frontmatter":{"title":"Bibliography","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bibliography\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Citation = makeShortcode(\"Citation\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \" This page is a work in progress \")), mdx(\"p\", null, \"This is both research I've looked at, and a handful of my notes - it's not really a formal bibliography, but I'm trying to roughly follow standard references for clarity.\"), mdx(\"h2\", {\n    \"id\": \"a-note-on-research-limitations\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#a-note-on-research-limitations\",\n    \"aria-label\": \"a note on research limitations permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"A note on research limitations\"), mdx(\"p\", null, \"It's fascinating reading a lot of this research.  An awful lot of it draws conclusions, or \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"implies\"), \" conclusions, based on one particular kind of codebase or kind of organisation; the trouble is, software development is extremely diverse, in kinds of organisation, software architectures, and software development practices.  And it seems a lot of academic research is done without much effort to think about these differences - partly because it's actually quite hard to get your hands on a diverse range of commercial software sources!  And quite a bit of research is 20+ years old, from giant organisations, so it's unlikely to talk about microservices or TDD all that much.\"), mdx(\"p\", null, \"I'll try to insert brief notes in this bibliography to clarify the kinds of code and organisation they looked at.  All the data is useful - but the context is important.\"), mdx(\"h2\", {\n    \"id\": \"books\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#books\",\n    \"aria-label\": \"books permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Books\"), mdx(\"h3\", {\n    \"id\": \"your-code-as-a-crime-scene-citationanchortor15citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#your-code-as-a-crime-scene-citationanchortor15citationanchor\",\n    \"aria-label\": \"your code as a crime scene citationanchortor15citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Your Code as a Crime Scene \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"Tor15\")), mdx(\"p\", null, \"Adam Tornhill. Your Code as a Crime Scene. The Pragmatic Bookshelf, Raleigh, NC, 2015. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.goodreads.com/book/show/23627482-your-code-as-a-crime-scene\"\n  }), \"GoodReads\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A great overview of code-maat and other related code investigation techniques.  This was the book that started me looking at alternatives to traditional code metrics!\")), mdx(\"h2\", {\n    \"id\": \"papers\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#papers\",\n    \"aria-label\": \"papers permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Papers\"), mdx(\"h3\", {\n    \"id\": \"a-metric-for-software-readability-citationanchorbw08citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#a-metric-for-software-readability-citationanchorbw08citationanchor\",\n    \"aria-label\": \"a metric for software readability citationanchorbw08citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"A metric for software readability \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"BW08\")), mdx(\"p\", null, \"Buse, R. P., & Weimer, W. R. (2008, July). A metric for software readability. In Proceedings of the 2008 international symposium on Software testing and analysis (pp. 121-130).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An attempt to build up metrics around \\\"readability\\\" - whatever that means.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Has a broad range of sources used\")), mdx(\"h3\", {\n    \"id\": \"an-empirical-study-on-the-impact-of-duplicate-code-citationanchorhsshk12citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#an-empirical-study-on-the-impact-of-duplicate-code-citationanchorhsshk12citationanchor\",\n    \"aria-label\": \"an empirical study on the impact of duplicate code citationanchorhsshk12citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"An empirical study on the impact of duplicate code \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"HSSHK12\")), mdx(\"p\", null, \"Hotta, K., Sasaki, Y., Sano, Y., Higo, Y., & Kusumoto, S. (2012). An empirical study on the impact of duplicate code. Advances in Software Engineering, 2012.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What it says on the tin - trying to identify whether duplicate code is as bad as everyone assumes\")), mdx(\"h3\", {\n    \"id\": \"attitudes-beliefs-and-development-data-concerning-agile-software-development-practices-citationanchormhdt19citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#attitudes-beliefs-and-development-data-concerning-agile-software-development-practices-citationanchormhdt19citationanchor\",\n    \"aria-label\": \"attitudes beliefs and development data concerning agile software development practices citationanchormhdt19citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Attitudes, beliefs and development data concerning agile software development practices \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"MHDT19\")), mdx(\"p\", null, \"Matthies, C., Huegle, J., D\\xFCrschmid, T., & Teusner, R. (2019, May). Attitudes, beliefs, and development data concerning agile software development practices. In 2019 IEEE/ACM 41st International Conference on Software Engineering: Software Engineering Education and Training (ICSE-SEET) (pp. 158-169). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Includes interesting stuff on detection of agile practices via code artifacts! \")), mdx(\"h3\", {\n    \"id\": \"automating-algorithms-for-the-identification-of-fault-prone-files-citationanchorowb07citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#automating-algorithms-for-the-identification-of-fault-prone-files-citationanchorowb07citationanchor\",\n    \"aria-label\": \"automating algorithms for the identification of fault prone files citationanchorowb07citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Automating algorithms for the identification of fault-prone files \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"OWB07\")), mdx(\"p\", null, \"Ostrand, T. J., Weyuker, E. J., & Bell, R. M. (2007, July). Automating algorithms for the identification of fault-prone files. In Proceedings of the 2007 international symposium on Software testing and analysis (pp. 219-227).\"), mdx(\"h3\", {\n    \"id\": \"code-smells-quantification-a-case-study-on-large-open-source-research-codebase-citationanchorcha19citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#code-smells-quantification-a-case-study-on-large-open-source-research-codebase-citationanchorcha19citationanchor\",\n    \"aria-label\": \"code smells quantification a case study on large open source research codebase citationanchorcha19citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Code Smells Quantification: A Case Study On Large Open Source Research Codebase. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"Cha19\")), mdx(\"p\", null, \"Chauhan, Swapnil Singh, \\\"Code Smells Quantification: A Case Study On Large Open Source Research Codebase\\\" (2019). Open Access Theses & Dissertations. 50. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://scholarworks.utep.edu/open_etd/50\"\n  }), \"https://scholarworks.utep.edu/open_etd/50\"), \" \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interesting as it has a comparison of the state of an academic codebase (QGis) vs a commercial open-source codebase (tensor-flow) and discusses at least two styles of coding.\")), mdx(\"h3\", {\n    \"id\": \"comparing-the-effectiveness-of-several-modeling-methods-for-fault-prediction-citationanchorwob10citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#comparing-the-effectiveness-of-several-modeling-methods-for-fault-prediction-citationanchorwob10citationanchor\",\n    \"aria-label\": \"comparing the effectiveness of several modeling methods for fault prediction citationanchorwob10citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Comparing the effectiveness of several modeling methods for fault prediction. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"WOB10\")), mdx(\"p\", null, \"Weyuker, E. J., Ostrand, T. J., & Bell, R. M. (2010). Comparing the effectiveness of several modeling methods for fault prediction. Empirical Software Engineering, 15(3), 277-295.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another BOW/WOB paper - mostly this is about different statistical modeling approaches.\")), mdx(\"h3\", {\n    \"id\": \"do-too-many-cooks-spoil-the-broth-using-the-number-of-developers-to-enhance-defect-prediction-models-citationanchorwob08citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#do-too-many-cooks-spoil-the-broth-using-the-number-of-developers-to-enhance-defect-prediction-models-citationanchorwob08citationanchor\",\n    \"aria-label\": \"do too many cooks spoil the broth using the number of developers to enhance defect prediction models citationanchorwob08citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"WOB08\")), mdx(\"p\", null, \"Weyuker, E. J., Ostrand, T. J., & Bell, R. M. (2008). Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models. Empirical Software Engineering, 13(5), 539-559.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another BOW/WOB paper - adding developer counts to their analysis. Useful but see notes above.\")), mdx(\"h3\", {\n    \"id\": \"cross-project-defect-prediction-a-large-scale-experiment-on-data-vs-domain-vs-process-citationanchorznggm09citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#cross-project-defect-prediction-a-large-scale-experiment-on-data-vs-domain-vs-process-citationanchorznggm09citationanchor\",\n    \"aria-label\": \"cross project defect prediction a large scale experiment on data vs domain vs process citationanchorznggm09citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Cross-project defect prediction: a large scale experiment on data vs. domain vs. process. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"ZNGGM09\")), mdx(\"p\", null, \"Zimmermann, T., Nagappan, N., Gall, H., Giger, E., & Murphy, B. (2009, August). Cross-project defect prediction: a large scale experiment on data vs. domain vs. process. In Proceedings of the 7th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering (pp. 91-100).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Microsoft research, but not on just their code but others\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"lots of cool metrics and whether they actually work across projects and orgs. For example IE vs Firefox. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TODO: needs more detailed reading\")), mdx(\"h3\", {\n    \"id\": \"does-code-decay-assessing-the-evidence-from-change-management-data-citationanchoregkmm01citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#does-code-decay-assessing-the-evidence-from-change-management-data-citationanchoregkmm01citationanchor\",\n    \"aria-label\": \"does code decay assessing the evidence from change management data citationanchoregkmm01citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Does code decay? assessing the evidence from change management data. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"EGKMM01\")), mdx(\"p\", null, \"Eick, S. G., Graves, T. L., Karr, A. F., Marron, J. S., & Mockus, A. (2001). Does code decay? assessing the evidence from change management data. IEEE Transactions on Software Engineering, 27(1), 1-12.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quite old - the paper is from 2001, the code is older - fascinating for how giant long-lived projects operated in the 90s, and looking at ways to identify code decay. Even hints that \\\"refactoring\\\" might be of some value.\")), mdx(\"h3\", {\n    \"id\": \"does-measuring-code-change-improve-fault-prediction-citationanchorbow11citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#does-measuring-code-change-improve-fault-prediction-citationanchorbow11citationanchor\",\n    \"aria-label\": \"does measuring code change improve fault prediction citationanchorbow11citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Does measuring code change improve fault prediction? \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"BOW11\")), mdx(\"p\", null, \"Bell, R. M., Ostrand, T. J., & Weyuker, E. J. (2011, September). Does measuring code change improve fault prediction?. In Proceedings of the 7th International Conference on Predictive Models in Software Engineering (pp. 1-8).\"), mdx(\"p\", null, \"Another BOW/WOB paper - looking at including code change info to their modeling\"), mdx(\"h3\", {\n    \"id\": \"dont-touch-my-code-examining-the-effects-of-ownership-on-software-quality-citationanchorbnmgd11citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#dont-touch-my-code-examining-the-effects-of-ownership-on-software-quality-citationanchorbnmgd11citationanchor\",\n    \"aria-label\": \"dont touch my code examining the effects of ownership on software quality citationanchorbnmgd11citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Don't touch my code! Examining the effects of ownership on software quality. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"BNMGD11\")), mdx(\"p\", null, \"Bird, C., Nagappan, N., Murphy, B., Gall, H., & Devanbu, P. (2011, September). Don't touch my code! Examining the effects of ownership on software quality. In Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (pp. 4-14).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Microsoft research, largely on Windows Vista and Windows 7 code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Seems a bit mixed between \\\"code ownership\\\" and \\\"allowing 'low expertise' developers to make unsupervised changes\\\" - maybe it's just my biases, but the conclusion seems to be that it's good to have single points of failure owning critical codebases, rather than working out the cultural / communication problems...\")), mdx(\"h3\", {\n    \"id\": \"evaluating-complexity-code-churn-and-developer-activity-metrics-as-indicators-of-software-vulnerabilities-citationanchorsmwo10citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#evaluating-complexity-code-churn-and-developer-activity-metrics-as-indicators-of-software-vulnerabilities-citationanchorsmwo10citationanchor\",\n    \"aria-label\": \"evaluating complexity code churn and developer activity metrics as indicators of software vulnerabilities citationanchorsmwo10citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Evaluating complexity, code churn, and developer activity metrics as indicators of software vulnerabilities. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"SMWO10\")), mdx(\"p\", null, \"Shin, Y., Meneely, A., Williams, L., & Osborne, J. A. (2010). Evaluating complexity, code churn, and developer activity metrics as indicators of software vulnerabilities. IEEE transactions on software engineering, 37(6), 772-787.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Analysis of Firefox and the Linux kernel\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TODO: this needs a more detailed read\")), mdx(\"h3\", {\n    \"id\": \"fractal-figures-visualizing-development-effort-for-cvs-entities-citationanchordlg05citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#fractal-figures-visualizing-development-effort-for-cvs-entities-citationanchordlg05citationanchor\",\n    \"aria-label\": \"fractal figures visualizing development effort for cvs entities citationanchordlg05citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fractal figures: Visualizing development effort for cvs entities \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"DLG05\")), mdx(\"p\", null, \"D'Ambros, M., Lanza, M., & Gall, H. (2005, September). Fractal figures: Visualizing development effort for cvs entities. In 3rd IEEE International Workshop on Visualizing Software for Understanding and Analysis (pp. 1-6). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This looks at ways to visualise, and categorise, developer effort - identifying code that is clustered around a few key owners, vs spread out across many\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Not just visualisation, it gives an algorithm for producing a metric\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TODO - it'd be interesting to add this to the Polyglot Code Explorer.\")), mdx(\"h3\", {\n    \"id\": \"reading-beside-the-lines-indentation-as-a-proxy-for-complexity-metric-citationanchorhgh08citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#reading-beside-the-lines-indentation-as-a-proxy-for-complexity-metric-citationanchorhgh08citationanchor\",\n    \"aria-label\": \"reading beside the lines indentation as a proxy for complexity metric citationanchorhgh08citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Reading beside the lines: Indentation as a proxy for complexity metric. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"HGH08\")), mdx(\"p\", null, \"Hindle, A., Godfrey, M. W., & Holt, R. C. (2008, June). Reading beside the lines: Indentation as a proxy for complexity metric. In 2008 16th IEEE International Conference on Program Comprehension (pp. 133-142). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is the main reference for the indentation-as-complexity visualisation.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Interesting that they indicate standard deviation is a good way to look at indentation\")), mdx(\"h3\", {\n    \"id\": \"looking-for-bugs-in-all-the-right-places-citationanchorbow06citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#looking-for-bugs-in-all-the-right-places-citationanchorbow06citationanchor\",\n    \"aria-label\": \"looking for bugs in all the right places citationanchorbow06citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Looking for bugs in all the right places. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"BOW06\")), mdx(\"p\", null, \"Bell, R. M., Ostrand, T. J., & Weyuker, E. J. (2006, July). Looking for bugs in all the right places. In Proceedings of the 2006 international symposium on Software testing and analysis (pp. 61-72).\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Another BOW/WOB paper\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Notes that most of their metrics are not much better than just looking at lines of code.\")), mdx(\"h3\", {\n    \"id\": \"non-essential-changes-in-version-histories-citationanchorkr11citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#non-essential-changes-in-version-histories-citationanchorkr11citationanchor\",\n    \"aria-label\": \"non essential changes in version histories citationanchorkr11citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Non-essential changes in version histories \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"KR11\")), mdx(\"p\", null, \"Kawrykow, D., & Robillard, M. P. (2011, May). Non-essential changes in version histories. In 2011 33rd International Conference on Software Engineering (ICSE) (pp. 351-360). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improving change metrics by eliminating changes which are just trivial like indentation or variable renaming.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sadly this is completely dependent on language-specific parsing to identify type signatures, so not much use for me.\")), mdx(\"h3\", {\n    \"id\": \"on-the-relationship-between-change-coupling-and-software-defects-citationanchordlr09citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#on-the-relationship-between-change-coupling-and-software-defects-citationanchordlr09citationanchor\",\n    \"aria-label\": \"on the relationship between change coupling and software defects citationanchordlr09citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"On the relationship between change coupling and software defects \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"DLR09\")), mdx(\"p\", null, \"D'Ambros, M., Lanza, M., & Robbes, R. (2009, October). On the relationship between change coupling and software defects. In 2009 16th Working Conference on Reverse Engineering (pp. 135-144). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quite detailed calculations showing correlation between tightly coupled code and defect levels\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This is mostly around monolithic applications so uses specific commits not time windows - I probably need to track per-commit coupling as well, my coupling code is still under active development!\")), mdx(\"h3\", {\n    \"id\": \"predicting-fault-incidence-using-software-change-history-citationanchorgkms00citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#predicting-fault-incidence-using-software-change-history-citationanchorgkms00citationanchor\",\n    \"aria-label\": \"predicting fault incidence using software change history citationanchorgkms00citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Predicting fault incidence using software change history. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"GKMS00\")), mdx(\"p\", null, \"Graves, T. L., Karr, A. F., Marron, J. S., & Siy, H. (2000). Predicting fault incidence using software change history. IEEE Transactions on software engineering, 26(7), 653-661.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quite old - 2000, code from 1997\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Concludes that older modules with large recent changes make for most faults. \")), mdx(\"h3\", {\n    \"id\": \"predicting-faults-using-the-complexity-of-code-changes-citationanchorhas09citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#predicting-faults-using-the-complexity-of-code-changes-citationanchorhas09citationanchor\",\n    \"aria-label\": \"predicting faults using the complexity of code changes citationanchorhas09citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Predicting faults using the complexity of code changes \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"Has09\")), mdx(\"p\", null, \"Hassan, A. E. (2009, May). Predicting faults using the complexity of code changes. In 2009 IEEE 31st international conference on software engineering (pp. 78-88). IEEE.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looks very interesting, needs a more detailed read\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"TODO: read this!\")), mdx(\"h3\", {\n    \"id\": \"visualization-based-analysis-of-quality-for-large-scale-software-systems-citationanchorlsp05citationanchor\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#visualization-based-analysis-of-quality-for-large-scale-software-systems-citationanchorlsp05citationanchor\",\n    \"aria-label\": \"visualization based analysis of quality for large scale software systems citationanchorlsp05citationanchor permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Visualization-based analysis of quality for large-scale software systems. \", mdx(CitationAnchor, {\n    mdxType: \"CitationAnchor\"\n  }, \"LSP05\")), mdx(\"p\", null, \"Langelier, G., Sahraoui, H., & Poulin, P. (2005, November). Visualization-based analysis of quality for large-scale software systems. In Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering (pp. 214-223).\"), mdx(\"h2\", {\n    \"id\": \"still-to-categorise\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#still-to-categorise\",\n    \"aria-label\": \"still to categorise permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Still to categorise\"), mdx(\"p\", null, \"\\\"Source code properties of defective infrastructure as code scripts\\\" 2018\\nCorrelation with lines of code, and hard coded strings! \"), mdx(\"p\", null, \"\\\"the influence of organisational structure on software quality\\\" 2008 Microsoft\\nMore effective to use organisational metrics than other ones!\\nGood summary of prior research too\\nLots of detailed metrics like employee churn, position in org chart - cool stuff. \"), mdx(\"p\", null, \"\\\"use of relative churn measures to predict system defect density\\\" 2005\\nBased on relative change to (say) lines of code, with time factors.\\nWindows server 2003 code. \"), mdx(\"p\", null, \"\\\"Using developer information as a factor for fault prediction\\\" - Ostrand again\\nNote \\\"arisholm and briand\\\" ref 2 about the value of such measures!\\nThis one adds developer info such as number of devs in recent release, number of new devs, cumulative devs during all prior releases \"), mdx(\"h2\", {\n    \"id\": \"still-to-find-and-read\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#still-to-find-and-read\",\n    \"aria-label\": \"still to find and read permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Still to find and read\"), mdx(\"p\", null, \"\\\"Code smells for multi-language systems\\\" paper from europlop 19\"), mdx(\"p\", null, \"\\\"visual detection of design anomalies\\\" - refers to \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"LSP05\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"A note on research limitations"},{"depth":2,"value":"Books"},{"depth":3,"value":"Your Code as a Crime Scene <CitationAnchor>Tor15</CitationAnchor>"},{"depth":2,"value":"Papers"},{"depth":3,"value":"A metric for software readability <CitationAnchor>BW08</CitationAnchor>"},{"depth":3,"value":"An empirical study on the impact of duplicate code <CitationAnchor>HSSHK12</CitationAnchor>"},{"depth":3,"value":"Attitudes, beliefs and development data concerning agile software development practices <CitationAnchor>MHDT19</CitationAnchor>"},{"depth":3,"value":"Automating algorithms for the identification of fault-prone files <CitationAnchor>OWB07</CitationAnchor>"},{"depth":3,"value":"Code Smells Quantification: A Case Study On Large Open Source Research Codebase. <CitationAnchor>Cha19</CitationAnchor>"},{"depth":3,"value":"Comparing the effectiveness of several modeling methods for fault prediction. <CitationAnchor>WOB10</CitationAnchor>"},{"depth":3,"value":"Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models <CitationAnchor>WOB08</CitationAnchor>"},{"depth":3,"value":"Cross-project defect prediction: a large scale experiment on data vs. domain vs. process. <CitationAnchor>ZNGGM09</CitationAnchor>"},{"depth":3,"value":"Does code decay? assessing the evidence from change management data. <CitationAnchor>EGKMM01</CitationAnchor>"},{"depth":3,"value":"Does measuring code change improve fault prediction? <CitationAnchor>BOW11</CitationAnchor>"},{"depth":3,"value":"Don't touch my code! Examining the effects of ownership on software quality. <CitationAnchor>BNMGD11</CitationAnchor>"},{"depth":3,"value":"Evaluating complexity, code churn, and developer activity metrics as indicators of software vulnerabilities. <CitationAnchor>SMWO10</CitationAnchor>"},{"depth":3,"value":"Fractal figures: Visualizing development effort for cvs entities <CitationAnchor>DLG05</CitationAnchor>"},{"depth":3,"value":"Reading beside the lines: Indentation as a proxy for complexity metric. <CitationAnchor>HGH08</CitationAnchor>"},{"depth":3,"value":"Looking for bugs in all the right places. <CitationAnchor>BOW06</CitationAnchor>"},{"depth":3,"value":"Non-essential changes in version histories <CitationAnchor>KR11</CitationAnchor>"},{"depth":3,"value":"On the relationship between change coupling and software defects <CitationAnchor>DLR09</CitationAnchor>"},{"depth":3,"value":"Predicting fault incidence using software change history. <CitationAnchor>GKMS00</CitationAnchor>"},{"depth":3,"value":"Predicting faults using the complexity of code changes <CitationAnchor>Has09</CitationAnchor>"},{"depth":3,"value":"Visualization-based analysis of quality for large-scale software systems. <CitationAnchor>LSP05</CitationAnchor>"},{"depth":2,"value":"Still to categorise"},{"depth":2,"value":"Still to find and read"}]}},"pageContext":{"slug":"/bibliography/","prev":{"label":"Data Format","link":"/tools/explorer/data-format"},"githubEditUrl":"https://github.com/kornysietsma/polyglot-tools-docs/tree/master/src/docs/bibliography.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}