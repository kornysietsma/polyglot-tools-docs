{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/research-notes/","result":{"data":{"mdx":{"id":"cc4df5b1-8120-5222-9b01-488553804eea","excerpt":"This page is a work in progress Looking for bugs in all the right places.  (Bell, Ostrand, and Weyuker 2006) Notes that most of their metrics are not muchâ€¦","fields":{"slug":"/research-notes/"},"frontmatter":{"title":"Research Notes","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Research Notes\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"This page is a work in progress\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Looking for bugs in all the right places. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Bell, Ostrand, and Weyuker 2006)\"))), mdx(\"p\", null, \"Notes that most of their metrics are not much better than just looking at lines of code.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Using developer information as a factor for fault prediction. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Weyuker, Ostrand, and Bell 2007)\"))), mdx(\"p\", null, \"This one adds developer info such as number of devs in recent release, number of new devs, cumulative devs during all prior releases\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Do too many cooks spoil the broth? Using the number of developers to enhance defect prediction models \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Weyuker, Ostrand, and Bell 2008)\"))), mdx(\"p\", null, \"Adding developer counts to their analysis. Useful but see notes above.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Comparing the effectiveness of several modeling methods for fault prediction. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Weyuker, Ostrand, and Bell 2010)\"))), mdx(\"p\", null, \"mostly this is about different statistical modeling approaches.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Does measuring code change improve fault prediction? \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Bell, Ostrand, and Weyuker 2011)\"))), mdx(\"p\", null, \"looking at including code change info to their modeling\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Don't touch my code! Examining the effects of ownership on software quality. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Bird et al. 2011)\"))), mdx(\"p\", null, \"Microsoft research, largely on Windows Vista and Windows 7 code\"), mdx(\"p\", null, \"Seems a bit mixed between \\\"code ownership\\\" and \\\"allowing 'low expertise' developers to make unsupervised changes\\\" - maybe it's just my biases, but the conclusion seems to be that it's good to have single points of failure owning critical codebases, rather than working out the cultural / communication problems...\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A metric for software readability \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Buse and Weimer 2008)\"))), mdx(\"p\", null, \"An attempt to build up metrics around \\\"readability\\\" - whatever that means.\\nHas a broad range of sources used\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Code Smells Quantification: A Case Study On Large Open Source Research Codebase. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Chauhan 2019)\"))), mdx(\"p\", null, \"Interesting as it has a comparison of the state of an academic codebase \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(QGis)\"), \" vs a commercial open-source codebase \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(tensor-flow)\"), \" and discusses at least two styles of coding.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Fractal figures: Visualizing development effort for cvs entities \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(D\\u2019Ambros, Lanza, and Gall 2005)\"))), mdx(\"p\", null, \"This looks at ways to visualise, and categorise, developer effort - identifying code that is clustered around a few key owners, vs spread out across many\\nNot just visualisation, it gives an algorithm for producing a metric\\nTODO - it'd be interesting to add this to the Polyglot Code Explorer.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"On the relationship between change coupling and software defects \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(D\\u2019Ambros, Lanza, and Robbes 2009)\"))), mdx(\"p\", null, \"Quite detailed calculations showing correlation between tightly coupled code and defect levels\"), mdx(\"p\", null, \"This is mostly around monolithic applications so uses specific commits not time windows - I probably need to track per-commit coupling as well, my coupling code is still under active development!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Does code decay? assessing the evidence from change management data. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Eick et al. 2001)\"))), mdx(\"p\", null, \"Quite old - the paper is from 2001, the code is older - fascinating for how giant long-lived projects operated in the 90s, and looking at ways to identify code decay. Even hints that \\\"refactoring\\\" might be of some value.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Predicting fault incidence using software change history. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Graves et al. 2000)\"))), mdx(\"p\", null, \"Quite old - 2000, code from 1997\"), mdx(\"p\", null, \"Concludes that older modules with large recent changes make for most faults.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Predicting faults using the complexity of code changes \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Hassan 2009)\"))), mdx(\"p\", null, \"Looks very interesting, needs a more detailed read\"), mdx(\"p\", null, \"TODO: read this!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Reading beside the lines: Indentation as a proxy for complexity metric. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Hindle, Godfrey, and Holt 2008)\"))), mdx(\"p\", null, \"This is the main reference for the indentation-as-complexity visualisation.\\nInteresting that they indicate standard deviation is a good way to look at indentation\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"An empirical study on the impact of duplicate code \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Hotta et al. 2012)\"))), mdx(\"p\", null, \"What it says on the tin - trying to identify whether duplicate code is as bad as everyone assumes\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Non-essential changes in version histories \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Kawrykow and Robillard 2011)\"))), mdx(\"p\", null, \"Improving change metrics by eliminating changes which are just trivial like indentation or variable renaming.\"), mdx(\"p\", null, \"Sadly this is completely dependent on language-specific parsing to identify type signatures, so not much use for me.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Attitudes, beliefs and development data concerning agile software development practices \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Matthies et al. 2019)\"))), mdx(\"p\", null, \"Includes interesting stuff on detection of agile practices via code artifacts!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Use of relative code churn measures to predict system defect density \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Nagappan and Ball 2005)\"))), mdx(\"p\", null, \"Instead of absolute churn, looks at churn relative to \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(say)\"), \" lines of code, different relative time scales\"), mdx(\"p\", null, \"Windows Server 2003 codebase\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The influence of organizational structure on software quality \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Nagappan, Murphy, and Basili 2008)\"))), mdx(\"p\", null, \"Using metrics like employee churn, position of developers on org chart - very cool stuff\\nThey conclude it is more effective to use organisational metrics than code quality metrics!\\nContains a useful summary of prior research too\"), mdx(\"p\", null, \"TODO: read further\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Source code properties of defective infrastructure as code scripts. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Rahman and Williams 2019)\"))), mdx(\"p\", null, \"Interesting to look at Infrastructure as Code - a different kind of code.  Includes correlations with number of static strings in codebases!\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Evaluating complexity, code churn, and developer activity metrics as indicators of software vulnerabilities. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Shin et al. 2011)\"))), mdx(\"p\", null, \"Analysis of Firefox and the Linux kernel\"), mdx(\"p\", null, \"TODO: this needs a more detailed read\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Cross-project defect prediction: a large scale experiment on data vs. domain vs. process. \", mdx(Citation, {\n    mdxType: \"Citation\"\n  }, \"(Zimmermann et al. 2009)\"))), mdx(\"p\", null, \"Microsoft research, but not on just their code but others\"), mdx(\"p\", null, \"lots of cool metrics and whether they actually work across projects and orgs. For example IE vs Firefox.\"), mdx(\"p\", null, \"TODO: needs more detailed reading\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Still to find and read\")), mdx(\"p\", null, \"\\\"Code smells for multi-language systems\\\" paper from europlop 19\"), mdx(\"p\", null, \"\\\"visual detection of design anomalies\\\" - refers to \", mdx(Citation, {\n    to: \"LSP05\",\n    mdxType: \"Citation\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[]}},"pageContext":{"slug":"/research-notes/","next":{"label":"Introduction","link":"/"},"githubEditUrl":"https://github.com/kornysietsma/polyglot-tools-docs/tree/master/src/docs/research-notes.mdx"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}