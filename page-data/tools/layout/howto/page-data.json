{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tools/layout/howto/","result":{"data":{"mdx":{"id":"ca6f1bce-c82f-5ac6-8d63-2c006a51a700","excerpt":"The offline layout script - it's too generous to call it an application! - is run as a node.js script; you'll need to install node.js to run it, or you canâ€¦","fields":{"slug":"/tools/layout/howto/"},"frontmatter":{"title":"How to run the Polyglot Code Offline Layout script","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to run the Polyglot Code Offline Layout script\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The offline layout script - it's too generous to call it an application! - is run as a node.js script; you'll need to install node.js to run it, or you can fetch a binary release which bundles up node.js and the script into a single executable.\"), mdx(\"p\", null, \"Apologies that this is fairly clunky at the moment - this script largely exists because the voronoi layout I wanted to use was far too slow to run in a browser, especially as it fails pretty often (see \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/tools/layout/description\"\n  }), \"the docs\"), \" for more).\"), mdx(\"p\", null, \"You can run this script via the executable or the bundled binary:\"), mdx(\"h2\", {\n    \"id\": \"binary-executables\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#binary-executables\",\n    \"aria-label\": \"binary executables permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Binary executables\"), mdx(\"p\", null, \"I am using \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.npmjs.com/package/pkg\"\n  }), \"pkg\"), \" to package up runnable executables.  Sadly the executable is quite large, but it saves you from installing node.js yourself.\"), mdx(\"h3\", {\n    \"id\": \"fetching-binary-releases\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#fetching-binary-releases\",\n    \"aria-label\": \"fetching binary releases permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fetching binary releases\"), mdx(\"p\", null, \"Binary releases are published to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-offline-layout/releases\"\n  }), \"https://github.com/kornysietsma/polyglot-code-offline-layout/releases\")), mdx(\"p\", null, \"You should be able to download the right file for your platform here.  Note I haven't tested this at all on Windows yet!  And I only have a single generic build for linux and OSX - if you are on another platform, you'll have to use node.js for now.\"), mdx(\"h3\", {\n    \"id\": \"getting-binaries-to-work-on-mac-osx\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#getting-binaries-to-work-on-mac-osx\",\n    \"aria-label\": \"getting binaries to work on mac osx permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting binaries to work on mac OSX\"), mdx(\"p\", null, \"OSX has a system to protect you from malware, called 'gatekeeper' - by default on OSX if you try to run the binary app, you'll get an error \\\"app is from an unknown developer\\\".  To bypass this I'd have to go through a complex extra stage of signing and bundling my tool as an application, which I'm avoiding for now.\"), mdx(\"p\", null, \"If you are happy that the binary is safe - all the code that builds it is on github, so you should be able to inspect it yourself - you can run it by stripping the extra attributes that OSX adds when you download it:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"unzip polyglot-code-offline-layout-macos.zip\\nxattr -d com.apple.quarantine polyglot-code-offline-layout\\n\")), mdx(\"p\", null, \"Then you can move the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyglot-code-offline-layout\"), \" binary to wherever you want.\"), mdx(\"h2\", {\n    \"id\": \"running-this-script-using-nodejs\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#running-this-script-using-nodejs\",\n    \"aria-label\": \"running this script using nodejs permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Running this script using node.js\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Install node.js - see \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://nodejs.org/en/download/package-manager/\"\n  }), \"https://nodejs.org/en/download/package-manager/\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"clone the code from \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-offline-layout\"\n  }), \"https://github.com/kornysietsma/polyglot-code-offline-layout\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"In the checked out repository, run \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm install\"), \" to fetch all the dependencies\")), mdx(\"p\", null, \"Then you can run it with\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ node layout.js -i input.json -o output.json\\n\")), mdx(\"p\", null, \"If you have multiple repositories in your source json, e.g. for a group of projects or microservices, you can ask for a pretty circle-packed algorithm for the main diagram with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-c\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"node layout.js -c -i input.json -o output.json\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-i\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-o\"), \" parameters are optional, if you don't supply them the script will read stdin and send output to stdout, so you can use unix-style pipes, or :\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"node layout.js < input.json > output.json\\n\")), mdx(\"p\", null, \"There are some optional parameters:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-h for help\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-c to use circle packing for the top level shaping, voronoi for the rest\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-g (the default) to accept an imperfect voronoi map - if you turn this off, the script will fail if it can't find a precise layout\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"-p NNN - specify how many points to use to draw the main circles around voronoi treemaps.  The default is 128, which is a pretty smooth circle.  You could specify \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"-p 6\"), \" and it will use hexagons!\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Binary executables"},{"depth":3,"value":"Fetching binary releases"},{"depth":3,"value":"Getting binaries to work on mac OSX"},{"depth":2,"value":"Running this script using node.js"}]}},"pageContext":{"slug":"/tools/layout/howto/","prev":{"label":"How to run the Scanner","link":"/tools/scanner/howto"},"next":{"label":"Data Format","link":"/tools/explorer/data-format"},"githubEditUrl":"https://github.com/kornysietsma/polyglot-tools-docs/tree/master/src/docs/tools/layout/howto.mdx"}},"staticQueryHashes":["1954253342","2328931024","2501019404","973074209"]}