{"componentChunkName":"component---node-modules-rocketseat-gatsby-theme-docs-core-src-templates-docs-query-js","path":"/tools/scanner/howto/","result":{"data":{"mdx":{"id":"50f81b36-2530-5ce5-88a6-a5c1b27a3de5","excerpt":"The code scanner is a rust command-line program - which means applications are compiled executable binary files, which you run from a terminal. There are twoâ€¦","fields":{"slug":"/tools/scanner/howto/"},"frontmatter":{"title":"How to run the Polyglot Code Scanner","description":null,"image":null,"disableTableOfContents":null},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to run the Polyglot Code Scanner\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The code scanner is a rust command-line program - which means applications are compiled executable binary files, which you run from a terminal.\"), mdx(\"p\", null, \"There are two ways to run the scanner - download a binary executable for your platform, or build it yourself from source.\"), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"NOTE\"), \" I haven't been able to test the binary releases myself on many platforms, so if these don't work, you might have to revert to compiling yourself.  (Feel free to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-scanner/issues\"\n  }), \"raise an issue\"), \" though, and I'll try to fix it)\"), mdx(\"h2\", {\n    \"id\": \"fetching-binary-releases\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#fetching-binary-releases\",\n    \"aria-label\": \"fetching binary releases permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fetching binary releases\"), mdx(\"p\", null, \"Binary releases are published to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-scanner/releases\"\n  }), \"https://github.com/kornysietsma/polyglot-code-scanner/releases\")), mdx(\"p\", null, \"You should be able to download the right file for your platform here.  Note I haven't tested this at all on Windows yet!  And I only have a single generic build for linux x86 and OSX - I can add more if there's demand.\"), mdx(\"h3\", {\n    \"id\": \"getting-it-to-work-on-mac-osx\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#getting-it-to-work-on-mac-osx\",\n    \"aria-label\": \"getting it to work on mac osx permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Getting it to work on mac OSX\"), mdx(\"p\", null, \"OSX has a system to protect you from malware, called 'gatekeeper' - by default on OSX if you try to run the binary app, you'll get an error \\\"app is from an unknown developer\\\".  To bypass this I'd have to go through a complex extra stage of signing and bundling my tool as an application, which I'm avoiding for now.\"), mdx(\"p\", null, \"If you are happy that the binary is safe - all the code that builds it is on github, so you should be able to inspect it yourself - you can run it by stripping the extra attributes that OSX adds when you download it, using \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"xattr\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"tar zxf polyglot-code-scanner-vwhatever-x86_64-apple-darwin.tar.gz\\ncd polyglot-code-scanner-vwhatever-x86_64-apple-darwin\\nxattr -d com.apple.quarantine polyglot_code_scanner\\n\")), mdx(\"p\", null, \"Then you can move the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyglot_code_scanner\"), \" binary to whever you want.\"), mdx(\"p\", null, \"If you don't want to trust the binary, follow the steps below to compile it yourself.\"), mdx(\"h2\", {\n    \"id\": \"fetching-code-and-compiling-a-binary\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#fetching-code-and-compiling-a-binary\",\n    \"aria-label\": \"fetching code and compiling a binary permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Fetching code and compiling a binary\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get rust and cargo - instructions are at \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rust-lang.org/tools/install\"\n  }), \"https://www.rust-lang.org/tools/install\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Clone or fork the project from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-scanner\"\n  }), \"https://github.com/kornysietsma/polyglot-code-scanner\")), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Or you can fetch the source code for a particular release from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kornysietsma/polyglot-code-scanner/releases\"\n  }), \"https://github.com/kornysietsma/polyglot-code-scanner/releases\"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"test and build with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cargo\"), \" the rust packaging tool:\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"$ cargo test\\n# ... maybe some warnings but hopefully no failures\\n$ cargo build --release\\n# ... lots of messages and noise - compiling can be slow\\n$ ls -l target/release\\ntotal 14368\\ndrwxr-xr-x  125 korny  staff     4000 28 Jul 15:09 build\\ndrwxr-xr-x  891 korny  staff    28512 28 Jul 15:11 deps\\ndrwxr-xr-x    2 korny  staff       64 20 Jun 15:20 examples\\ndrwxr-xr-x    2 korny  staff       64 20 Jun 15:20 incremental\\n-rw-r--r--    1 korny  staff     1003 29 Jun 14:45 libpolyglot_code_scanner.d\\n-rw-r--r--    2 korny  staff  3062736 28 Jul 15:11 libpolyglot_code_scanner.rlib\\n-rwxr-xr-x    2 korny  staff  4280600 28 Jul 15:11 polyglot_code_scanner\\n-rw-r--r--    1 korny  staff     1063 29 Jun 14:45 polyglot_code_scanner.d\\n\\n$ target/release/polyglot_code_scanner -V\\npolyglot_code_scanner 0.1.2\\n\")), mdx(\"p\", null, \"All you need to care about is the binary \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyglot_code_scanner\"), \" - that's what you need to run.  You can run it from the target directory or copy it somewhere useful.\"), mdx(\"p\", null, \"(You can also run the project with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cargo run\"), \" but that's slower as it runs with debugging and without a lot of optimisation)\"), mdx(\"h2\", {\n    \"id\": \"running-it\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#running-it\",\n    \"aria-label\": \"running it permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Running it\"), mdx(\"p\", null, \"You can run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyglot_code_scanner -h\"), \" for command-line help.\"), mdx(\"p\", null, \"Usually you will just run:\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"polyglot_code_scanner --coupling -o json_file_name.json <source directory>\")), mdx(\"h3\", {\n    \"id\": \"important-options\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#important-options\",\n    \"aria-label\": \"important options permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Important options\"), mdx(\"p\", null, \"\\\"--years <git_years>\\\" - scan through this much history.  Git scanning can be slow, and often you only care about the last few years.\"), mdx(\"p\", null, \"\\\"--coupling\\\" - enables temporal coupling.  This can be very very slow to calculate - if you don't want it, don't specify this option!  TODO: link to temporal coupling explanation\"), mdx(\"h2\", {\n    \"id\": \"output-file\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#output-file\",\n    \"aria-label\": \"output file permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Output file\"), mdx(\"p\", null, \"See \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/tools/explorer/data-format\"\n  }), \"Data Format\"), \" for a description of the output JSON file format.\"), mdx(\"p\", null, \"It's not pretty printed to save space - if you want it pretty, the easiest thing is to install \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stedolan.github.io/jq/download/\"\n  }), \"jq\"), \" and run:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sh\"\n  }), \"jq < file.json | less\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","headings":[{"depth":2,"value":"Fetching binary releases"},{"depth":3,"value":"Getting it to work on mac OSX"},{"depth":2,"value":"Fetching code and compiling a binary"},{"depth":2,"value":"Running it"},{"depth":3,"value":"Important options"},{"depth":2,"value":"Output file"}]}},"pageContext":{"slug":"/tools/scanner/howto/","prev":{"label":"How to run the Explorer","link":"/tools/explorer/howto"},"next":{"label":"How to run the Layout","link":"/tools/layout/howto"},"githubEditUrl":"https://github.com/kornysietsma/polyglot-tools-docs/tree/master/src/docs/tools/scanner/howto.mdx"}},"staticQueryHashes":["1954253342","2360221584","2501019404","2679457992"]}